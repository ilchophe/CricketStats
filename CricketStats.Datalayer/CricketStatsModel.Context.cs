//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CricketStats.Datalayer
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CricketStatsEntities : DbContext
    {
        public CricketStatsEntities()
            : base("name=CricketStatsEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<BattingInn> BattingInns { get; set; }
        public virtual DbSet<BowlingInn> BowlingInns { get; set; }
        public virtual DbSet<Country> Countries { get; set; }
        public virtual DbSet<Dismissal> Dismissals { get; set; }
        public virtual DbSet<Match> Matches { get; set; }
        public virtual DbSet<MatchType> MatchTypes { get; set; }
        public virtual DbSet<Player> Players { get; set; }
        public virtual DbSet<Venue> Venues { get; set; }
        public virtual DbSet<vw_PlayerList> vw_PlayerList { get; set; }
    
        public virtual ObjectResult<GetPlayersByCountry_Result> GetPlayersByCountry(Nullable<System.Guid> countryid)
        {
            var countryidParameter = countryid.HasValue ?
                new ObjectParameter("countryid", countryid) :
                new ObjectParameter("countryid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPlayersByCountry_Result>("GetPlayersByCountry", countryidParameter);
        }
    
        public virtual ObjectResult<string> GetVenuesByCountry(Nullable<System.Guid> countryid)
        {
            var countryidParameter = countryid.HasValue ?
                new ObjectParameter("countryid", countryid) :
                new ObjectParameter("countryid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetVenuesByCountry", countryidParameter);
        }
    }
}
